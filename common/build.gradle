//file:noinspection GradlePackageUpdate
architectury {
    common platforms.split(",")
}

loom {
    accessWidenerPath = file "src/main/resources/devices.accesswidener"
}

repositories {
    maven { url = "https://cursemaven.com" }
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:$fabric_loader_version"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury:$architectury_version"

    implementation "org.jetbrains.kotlin:kotlin-reflect:1.7.10"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.7.10"
//    modApi "com.ultreon:ultranlang:0.1.0+6"

    modCompileOnly "fuzs.forgeconfigapiport:forgeconfigapiport-common:8.0.0"
    modCompileOnly 'com.electronwill.night-config:core:3.6.3'
    modCompileOnly 'com.electronwill.night-config:toml:3.6.3'

}

sourceSets {
    main {
        resources {
            srcDirs += [
                    "src/main/generated/resources"
            ]
            System.out.println(srcDirs)
        }
    }
}


publishing {
    publications {
        register('mavenCommon', MavenPublication) {
            artifactId base.archivesName.get()
            from components.java
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/Ultreon/devices-mod")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
}
