plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.2-SNAPSHOT" apply false
    id "org.jetbrains.kotlin.jvm" version "1.7.10"
}
repositories {
    gradlePluginPortal()
}

architectury {
    minecraft = minecraft_version
}

if (project.hasProperty('ci') && project.ci.toBoolean() && project.hasProperty('snapshot') && project.snapshot.toBoolean()) {
    mod_version += '-SNAPSHOT'
}

version mod_version

Object getIngameVersion() {
    return mod_version
}

Object getModDescription() {
    return mod_description
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    repositories {
        mavenCentral()

        maven {
            name = 'Sponge / Mixin'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }

        maven {
            name = "Fuzs Mod Resources"
            url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
        }

        maven {
            name = 'BlameJared Maven (CrT / Bookshelf)'
            url = 'https://maven.blamejared.com'
        }
        maven {
            name = 'ParchmentMC'
            url = 'https://maven.parchmentmc.org'
        }

        maven {
            name 'Quilt (Release)'
            url 'https://maven.quiltmc.org/repository/release/'
        }


        maven {
            url "https://cursemaven.com"
            content {
                includeGroup "curse.maven"
            }
        }
        maven {
            // location of the maven that hosts JEI files
            name = "Progwml6 maven"
            url = "https://dvs1.progwml6.com/files/maven/"
        }
        maven { url "https://maven.architectury.dev/" }
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        // The following line declares the mojmap mappings, you may use other mappings as well
        mappings loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-1.20.1:2023.09.03@zip")
        }

//        layered
        // The following line declares the yarn mappings you may select this one as well.
        // mappings "net.fabricmc:yarn:@YARN_MAPPINGS@:v2"
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.version
    group = rootProject.maven_group

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
        maven { url "https://maven.parchmentmc.org" }
        maven { url "https://maven.jab125.dev" }
        flatDir { dir "$rootProject.projectDir/libs/" }
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = "UTF-8"
        options.release.set(17)
    }

    java {
        withSourcesJar()
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xmaxerrs" << "9999"
        }
    }
}

void setupRepositories(RepositoryHandler repositories) {
    //repositories.mavenLocal() // uncomment for testing
    def ENV = System.getenv()
    if (ENV.MAVEN_URL) {
        repositories.maven {
            url ENV.MAVEN_URL
            credentials {
                username ENV.MAVEN_USERNAME
                password ENV.MAVEN_PASSWORD
            }
        }
    }
}
