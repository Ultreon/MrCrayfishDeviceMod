buildscript {
    repositories {
        exclusiveContent {
            forRepository {
                maven {
                    name = 'Quilt'
                    url = uri('https://maven.quiltmc.org/repository/release')
                }
            }
            filter {
                includeGroupAndSubgroups('org.quiltmc')
            }
        }
    }
}

plugins {
    id 'multiloader-loader'
    id 'java'
    alias(libs.plugins.quilt.loom)
}

dependencies {
    modImplementation "org.quiltmc:quilt-loader:$rootProject.quilt_loader_version"
    modImplementation "org.quiltmc:quilt-json5:1.0.4+final"
    modImplementation "org.quiltmc:quilt-config:1.3.2"
    modImplementation "org.quiltmc:qsl:10.0.0-alpha.3+1.21.1"

    // Quilt Standard Libraries and QSL.
    modImplementation "org.quiltmc.quilted-fabric-api:quilted-fabric-api:$rootProject.quilted_fabric_api_version", {
        exclude group: "net.fabricmc", module: "fabric-loader"
    }

    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered {
        mappings "org.quiltmc:quilt-mappings:1.21+build.18:intermediary-v2"
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${parchment_minecraft}:${parchment_version}@zip")
    }

    // Mixin
    modImplementation "net.fabricmc:sponge-mixin:0.15.2+mixin.0.8.7"

    // ASM
    modImplementation "org.ow2.asm:asm:9.5"
    modImplementation "org.ow2.asm:asm-tree:9.5"
    modImplementation "org.ow2.asm:asm-commons:9.5"
    modImplementation "org.ow2.asm:asm-util:9.5"
    modImplementation "org.ow2.asm:asm-analysis:9.5"

    modImplementation "maven.modrinth:modmenu:${modmenu_version}"

    implementation(group: 'io.projectreactor', name: 'reactor-core', version: '3.5.5')
    implementation('com.github.Nuix:jnode-fs:v1.0.1')

    modImplementation "fuzs.forgeconfigapiport:forgeconfigapiport-fabric:21.1.0", {
        exclude group: "net.fabricmc", module: "fabric-loader"
    }

    modImplementation "dev.ultreon.mods:xinexlib-fabric-1.21.1:1.21.1-SNAPSHOT", {
        exclude group: "net.fabricmc", module: "fabric-loader"
    }
}

jar {
    doLast {
        copy {
            from "build/devlibs/devices-quilt-${minecraft_version}-${version}-dev.jar"
            into "build/libs/"

            rename { String fileName -> "devices-quilt-${minecraft_version}-${version}-dev.jar" }
        }
    }
}

loom {
    def aw = project(':common').file("src/main/resources/${mod_id}.accesswidener")
    if (aw.exists()) {
        accessWidenerPath.set(aw)
    }
    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }
    runs {
        client {
            setConfigName('Quilt Client')
            setIdeConfigGenerated(true)
            vmArgs("-Dxinexlib.dev=true")
        }
        server {
            setConfigName('Quilt Server')
            setIdeConfigGenerated(true)
            vmArgs("-Dxinexlib.dev=true")
        }
    }

    // Loom and Loader both use this block in order to gather more information about your mod.
    mods {
        // This should match your mod id.
        register("devices") {
            // Tell Loom about each source set used by your mod here. This ensures that your mod's classes are properly transformed by Loader.
            sourceSet("main", project)
            sourceSet("main", project(":common"))
            // If you shade (directly include classes, not JiJ) a dependency into your mod, include it here using one of these methods:
            // dependency("com.example.shadowedmod:1.2.3")
            // configuration("exampleShadedConfigurationName")
        }
    }
}

processIncludeJars.enabled = false
